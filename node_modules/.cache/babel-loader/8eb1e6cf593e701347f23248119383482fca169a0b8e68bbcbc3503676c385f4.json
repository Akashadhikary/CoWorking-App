{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Asus\\\\Desktop\\\\React Pojects\\\\Figma Assesment\\\\coworking-app\\\\src\\\\pages\\\\Home.tsx\",\n  _s = $RefreshSig$();\n// src/pages/Home.tsx\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchCenters } from '../store/centersSlice';\nimport { CircularProgress, Typography } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const dispatch = useDispatch();\n  const centers = useSelector(state => state.centers.centers);\n  const centerStatus = useSelector(state => state.centers.status);\n  const error = useSelector(state => state.centers.error);\n  useEffect(() => {\n    if (centerStatus === 'idle') {\n      dispatch(fetchCenters());\n    }\n  }, [centerStatus, dispatch]);\n  let content;\n  if (centerStatus === 'loading') {\n    content = /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 15\n    }, this);\n  } else if (centerStatus === 'succeeded') {\n    // content = (\n    // //   <Grid container spacing={3}>\n    // //     {centers.map((center) => (\n    // //       <Grid item key={center.id} xs={12} sm={6} md={4}>\n    // //         <CenterCard center={center} />\n    // //       </Grid>\n    // //     ))}\n    // //   </Grid>\n    // );\n  } else if (centerStatus === 'failed') {\n    content = /*#__PURE__*/_jsxDEV(Typography, {\n      color: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 15\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: content\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 10\n  }, this);\n};\n_s(Home, \"qMsqKUm8Pq62DVGwDLlDF+yTcWo=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useDispatch","useSelector","fetchCenters","CircularProgress","Typography","jsxDEV","_jsxDEV","Home","_s","dispatch","centers","state","centerStatus","status","error","content","fileName","_jsxFileName","lineNumber","columnNumber","color","children","_c","$RefreshReg$"],"sources":["C:/Users/Asus/Desktop/React Pojects/Figma Assesment/coworking-app/src/pages/Home.tsx"],"sourcesContent":["// src/pages/Home.tsx\r\nimport React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { fetchCenters } from '../store/centersSlice';\r\nimport { RootState, AppDispatch } from '../store';\r\nimport CenterCard from '../components/CenterCard';\r\nimport { Grid, CircularProgress, Typography } from '@mui/material';\r\n\r\nconst Home: React.FC = () => {\r\n  const dispatch: AppDispatch = useDispatch();\r\n  const centers = useSelector((state: RootState) => state.centers.centers);\r\n  const centerStatus = useSelector((state: RootState) => state.centers.status);\r\n  const error = useSelector((state: RootState) => state.centers.error);\r\n\r\n  useEffect(() => {\r\n    if (centerStatus === 'idle') {\r\n      dispatch(fetchCenters());\r\n    }\r\n  }, [centerStatus, dispatch]);\r\n\r\n  let content;\r\n\r\n  if (centerStatus === 'loading') {\r\n    content = <CircularProgress />;\r\n  } else if (centerStatus === 'succeeded') {\r\n    // content = (\r\n    // //   <Grid container spacing={3}>\r\n    // //     {centers.map((center) => (\r\n    // //       <Grid item key={center.id} xs={12} sm={6} md={4}>\r\n    // //         <CenterCard center={center} />\r\n    // //       </Grid>\r\n    // //     ))}\r\n    // //   </Grid>\r\n    // );\r\n  } else if (centerStatus === 'failed') {\r\n    content = <Typography color=\"error\">{error}</Typography>;\r\n  }\r\n\r\n  return <div>{content}</div>;\r\n};\r\n\r\nexport default Home;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,YAAY,QAAQ,uBAAuB;AAGpD,SAAeC,gBAAgB,EAAEC,UAAU,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnE,MAAMC,IAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAMC,QAAqB,GAAGT,WAAW,CAAC,CAAC;EAC3C,MAAMU,OAAO,GAAGT,WAAW,CAAEU,KAAgB,IAAKA,KAAK,CAACD,OAAO,CAACA,OAAO,CAAC;EACxE,MAAME,YAAY,GAAGX,WAAW,CAAEU,KAAgB,IAAKA,KAAK,CAACD,OAAO,CAACG,MAAM,CAAC;EAC5E,MAAMC,KAAK,GAAGb,WAAW,CAAEU,KAAgB,IAAKA,KAAK,CAACD,OAAO,CAACI,KAAK,CAAC;EAEpEf,SAAS,CAAC,MAAM;IACd,IAAIa,YAAY,KAAK,MAAM,EAAE;MAC3BH,QAAQ,CAACP,YAAY,CAAC,CAAC,CAAC;IAC1B;EACF,CAAC,EAAE,CAACU,YAAY,EAAEH,QAAQ,CAAC,CAAC;EAE5B,IAAIM,OAAO;EAEX,IAAIH,YAAY,KAAK,SAAS,EAAE;IAC9BG,OAAO,gBAAGT,OAAA,CAACH,gBAAgB;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAChC,CAAC,MAAM,IAAIP,YAAY,KAAK,WAAW,EAAE;IACvC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EAAA,CACD,MAAM,IAAIA,YAAY,KAAK,QAAQ,EAAE;IACpCG,OAAO,gBAAGT,OAAA,CAACF,UAAU;MAACgB,KAAK,EAAC,OAAO;MAAAC,QAAA,EAAEP;IAAK;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAa,CAAC;EAC1D;EAEA,oBAAOb,OAAA;IAAAe,QAAA,EAAMN;EAAO;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AAC7B,CAAC;AAACX,EAAA,CA/BID,IAAc;EAAA,QACYP,WAAW,EACzBC,WAAW,EACNA,WAAW,EAClBA,WAAW;AAAA;AAAAqB,EAAA,GAJrBf,IAAc;AAiCpB,eAAeA,IAAI;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}