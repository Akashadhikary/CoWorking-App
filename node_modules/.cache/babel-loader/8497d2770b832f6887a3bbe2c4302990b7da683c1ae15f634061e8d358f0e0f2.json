{"ast":null,"code":"// src/store/centersSlice.ts\nimport { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\nconst initialState = {\n  centers: [],\n  status: 'idle',\n  error: null\n};\nexport const fetchCenters = createAsyncThunk('centers/fetchCenters', async () => {\n  const response = await axios.get('https://github.com/MujtabaKably/bhive-interview-project-data/blob/main/data.json');\n  return response.data;\n});\nconst centersSlice = createSlice({\n  name: 'centers',\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(fetchCenters.pending, state => {\n      state.status = 'loading';\n    }).addCase(fetchCenters.fulfilled, (state, action) => {\n      state.status = 'succeeded';\n      state.centers = action.payload;\n    }).addCase(fetchCenters.rejected, (state, action) => {\n      state.status = 'failed';\n      state.error = action.error.message || null;\n    });\n  }\n});\nexport default centersSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","initialState","centers","status","error","fetchCenters","response","get","data","centersSlice","name","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","message","reducer"],"sources":["C:/Users/Asus/Desktop/React Pojects/Figma Assesment/coworking-app/src/store/centersSlice.ts"],"sourcesContent":["// src/store/centersSlice.ts\r\nimport { createSlice, createAsyncThunk, PayloadAction } from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\n\r\ninterface Center {\r\n  id: string;\r\n  name: string;\r\n  description: string;\r\n  // Add other fields as necessary\r\n}\r\n\r\ninterface CentersState {\r\n  centers: Center[];\r\n  status: 'idle' | 'loading' | 'succeeded' | 'failed';\r\n  error: string | null;\r\n}\r\n\r\nconst initialState: CentersState = {\r\n  centers: [],\r\n  status: 'idle',\r\n  error: null,\r\n};\r\n\r\nexport const fetchCenters = createAsyncThunk('centers/fetchCenters', async () => {\r\n  const response = await axios.get('https://github.com/MujtabaKably/bhive-interview-project-data/blob/main/data.json');\r\n  return response.data as Center[];\r\n});\r\n\r\nconst centersSlice = createSlice({\r\n  name: 'centers',\r\n  initialState,\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(fetchCenters.pending, (state) => {\r\n        state.status = 'loading';\r\n      })\r\n      .addCase(fetchCenters.fulfilled, (state, action: PayloadAction<Center[]>) => {\r\n        state.status = 'succeeded';\r\n        state.centers = action.payload;\r\n      })\r\n      .addCase(fetchCenters.rejected, (state, action) => {\r\n        state.status = 'failed';\r\n        state.error = action.error.message || null;\r\n      });\r\n  },\r\n});\r\n\r\nexport default centersSlice.reducer;\r\n"],"mappings":"AAAA;AACA,SAASA,WAAW,EAAEC,gBAAgB,QAAuB,kBAAkB;AAC/E,OAAOC,KAAK,MAAM,OAAO;AAezB,MAAMC,YAA0B,GAAG;EACjCC,OAAO,EAAE,EAAE;EACXC,MAAM,EAAE,MAAM;EACdC,KAAK,EAAE;AACT,CAAC;AAED,OAAO,MAAMC,YAAY,GAAGN,gBAAgB,CAAC,sBAAsB,EAAE,YAAY;EAC/E,MAAMO,QAAQ,GAAG,MAAMN,KAAK,CAACO,GAAG,CAAC,kFAAkF,CAAC;EACpH,OAAOD,QAAQ,CAACE,IAAI;AACtB,CAAC,CAAC;AAEF,MAAMC,YAAY,GAAGX,WAAW,CAAC;EAC/BY,IAAI,EAAE,SAAS;EACfT,YAAY;EACZU,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAACT,YAAY,CAACU,OAAO,EAAGC,KAAK,IAAK;MACxCA,KAAK,CAACb,MAAM,GAAG,SAAS;IAC1B,CAAC,CAAC,CACDW,OAAO,CAACT,YAAY,CAACY,SAAS,EAAE,CAACD,KAAK,EAAEE,MAA+B,KAAK;MAC3EF,KAAK,CAACb,MAAM,GAAG,WAAW;MAC1Ba,KAAK,CAACd,OAAO,GAAGgB,MAAM,CAACC,OAAO;IAChC,CAAC,CAAC,CACDL,OAAO,CAACT,YAAY,CAACe,QAAQ,EAAE,CAACJ,KAAK,EAAEE,MAAM,KAAK;MACjDF,KAAK,CAACb,MAAM,GAAG,QAAQ;MACvBa,KAAK,CAACZ,KAAK,GAAGc,MAAM,CAACd,KAAK,CAACiB,OAAO,IAAI,IAAI;IAC5C,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AAEF,eAAeZ,YAAY,CAACa,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}